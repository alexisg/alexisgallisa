// Grid
//
// Twitch uses a mobile first 12 column fluid grid system based on flexbox FTW.
// Sizing of cells are set at the child level when used inside the parent .row class or set globally at the parent level when using the parent .grid with .grid--viewportsize-colsize class
//
// Markup:
// <strong>Using the .row class child elements can have different widths set by viewport</strong>
// <div class="row show-grid">
//   <div class="col-xs-12 col-md-8">.col-xs-12 .col-md-8</div>
//   <div class="col-xs-12 col-md-4">.col-xs-6 .col-md-4</div>
// </div>
// <div class="row show-grid">
//   <div class="col-xs-12 col-sm-6 col-md-3">.col-xs-12 .col-sm-6 .col-md-3 .col-lg-2</div>
//   <div class="col-xs-12 col-sm-6 col-md-3">.col-xs-12 .col-sm-6 .col-md-3 .col-lg-2</div>
//   <div class="col-xs-12 col-sm-6 col-md-3">.col-xs-12 .col-sm-6 .col-md-3 .col-lg-2</div>
//   <div class="col-xs-12 col-sm-6 col-md-3">.col-xs-12 .col-sm-6 .col-md-3 .col-lg-2</div>
// </div>
// <strong>Using the .grid class all child elements will be the same width but viewport sizes can be changed. .grid--md-1-3 = thirds grid at medium viewport The inner div inside the div is just for show in this demo. </strong>
// <div class="grid grid--xs-1-1 grid--sm-1-2 grid--md-1-3 grid--lg-1-4 grid--xl-1-5 show-grid">
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
//   <div><div></div></div>
// </div>
//
//
//
// Styleguide 1.3


/* Desktop Container */
.container
  max-width: $grid_max_width
  margin: 0 auto
  +clearfix

.container--fluid
  max-width: 100%

/* Create base grid */
.row,.grid
  display: flex
  flex-wrap: wrap
  list-style: none

// When nesting rows and grids lets margin them back in
.row,.grid
  .row,.grid
    margin-left: $grid_gutter_width*-1
    margin-right: $grid_gutter_width*-1

[class*="col-"],.grid > *
  flex: 0 0 auto
  padding: 0 $grid_gutter_width

.grid > *
  padding-bottom: guv(1)

// Create the .col-columns base sizes
@for $i from 1 through $grid_columns
  .col-xs-#{$i}
    width: percentage($i/$grid_columns)
  .grid--xs-1-#{$i} > *
    width: percentage(1/$i)

// Now the create the breakpoints override sizes at different screen sizes
// @each $slug, $size in $breakpoints
//   @media (min-width: #{$size})
//     @for $i from 1 through $grid_columns
//       .col-#{$slug}-#{$i}
//         width: percentage($i/$grid_columns)

// We need to use map-keys since grunt-sass is still at libsass 3.1
@each $slug in map-keys($breakpoints)
  $size: map-get($breakpoints, $slug)
  @media (min-width: #{$size})
    @for $i from 1 through $grid_columns
      .col-#{$slug}-#{$i}
        width: percentage($i/$grid_columns)
      .grid--#{$slug}-1-#{$i} > *
        width: percentage(1/$i)
